server:
  port: 8765
  # ssl:
    # key-store: classpath:server.jks
    # key-store-password: password
    # key-password: password
    #enabled: false
    # Problem with trust-store properties?
    #
    # Instead use: java -Djavax.net.debug=ssl -Djavax.net.ssl.trustStore=src/main/resources/truststore.jks -Djavax.net.ssl.trustStorePassword=password -jar build/libs/*.jar
    #
    # trust-store: classpath:truststore.jks
    #trust-store: src/main/resources/truststore.jks
    #trust-store-password: password

security:
  oauth2:
    resource:
      userInfoUri: http://nghia.ms:9999/uaa/user

hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 100
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 30000
        requestVolumeThreshold: 20
      execution:
        isolation:
#          strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 60000

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 3
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5

endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false

# zuul:
  # ignoredServices: "*"
  # prefix: /api
  # routes:
    # composite-service: /product/**
zuul:
  ignoredServices: "*"
  routes:
    product_service:
      path: /product/**
#      stripPrefix: false
    core-composite-service:
      path: /compose/**
    bus-user:
      path: /user_path/**
logging:
  level:
    ROOT: WARN
    se.callista: INFO

    # Set DEBUG level to activate our log-filter to log each request and response
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

    # Get info regarding connection to the cofig server and retries if required
    org.springframework.cloud.config.client.ConfigServicePropertySourceLocator: INFO
    org.springframework.retry.support.RetryTemplate: DEBUG

    # Set INFO to see the allocated port
    org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer: INFO
    org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer: INFO

    # Set DEBUG level on Hystrix to get an error message when a fallback method is used.
    com.netflix.hystrix: DEBUG
    com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty: WARN
---
# For deployment in Docker containers
spring:
  profiles: docker

server:
  port: 8765
  ssl:
    trust-store: truststore.jks

security:
  oauth2:
    resource:
      userInfoUri: https://auth:9999/uaa/user

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/

---
# For deployment in Cloud Foundry
spring:
  profiles: cloud
  oauth2:
    resource:
      userInfoUri: https://ml-public-auth.cfapps.io/uaa/user

eureka:
  instance:
    hostname: ${vcap.application.uris[0]:localhost}
    nonSecurePort: 80
  client:
    serviceUrl:
      defaultZone: http://ml-public-ds-1.cfapps.io/eureka/