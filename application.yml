#server:
#  port: 0

service:
  defaultMinMs: 5
  defaultMaxMs: 20

# 1.0 means 100%, see http://cloud.spring.io/spring-cloud-sleuth/spring-cloud-sleuth.html#_sampling
spring.sleuth.sampler.percentage: 1.0

logging:
  level:
    root: WARN
    com.nghia.tut.mss: INFO

    # Set DEBUG level to activate our log-filter to log each request and response
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

    # FIXME: Get rid on NPE-exceptions in SC 1.1
    com.netflix.hystrix.contrib.javanica.command.GenericCommand: ERROR
    
    # Get info on failed OAuth access token validations
    org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoTokenServices: INFO

    # Get info regarding connection to the cofig server and retries if required
    org.springframework.cloud.config.client.ConfigServicePropertySourceLocator: INFO
    org.springframework.retry.support.RetryTemplate: DEBUG

    # Set INFO to see the allocated port
    org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer: INFO
    org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer: INFO

    # Set DEBUG level on Hystrix to get an error message when a fallback method is used.
    #com.netflix.hystrix: DEBUG
    com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty: WARN

    # To get rid of fake WARN messages: "Deprecated trace headers detected. Please upgrade Sleuth to 1.1 or start sending headers present in the TraceMessageHeaders class",
    org.springframework.cloud.sleuth.instrument.messaging.MessagingSpanExtractor: ERROR
    
      # Set INFO to see the allocated port
    org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer: INFO
    org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer: INFO

spring.rabbitmq:
  host: nghia.tool
  port: 5672

hystrix:
  stream:
    queue:
      send-id: false


ribbon:

# FelFelFel: 1000
# capital or not capital, that is the question...

  # Interval to refresh the server list from the source
  serverListRefreshInterval: 1000

  # Max number of retries on the same server (excluding the first try)
  maxAutoRetries: 1

  # Max number of next servers to retry (excluding the first server)
  maxAutoRetriesNextServer: 1

  # Interval to refresh the server list from the source
  ServerListRefreshInterval: 1000

  # Max number of retries on the same server (excluding the first try)
  MaxAutoRetries: 1

  # Max number of next servers to retry (excluding the first server)
  MaxAutoRetriesNextServer: 1

#
#  # Connect timeout used by Apache HttpClient
#  connectTimeout: 100
#
#  # Read timeout used by Apache HttpClient
#  readTimeout: 10000
#
#  ConnectTimeout: 100
#  ReadTimeout: 3000

eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 1
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
    registryFetchIntervalSeconds: 1
    instanceInfoReplicationIntervalSeconds: 1
    initialInstanceInfoReplicationIntervalSeconds: 1
    serviceUrl:
      defaultZone: http://nghia.ms:8761/eureka/

custom.gateway:
  url: http://nghia.ms:8765